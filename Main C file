/*
Gaurav Nagarnaik
I-node

*/


#include <dirent.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>


int main(int argc, char **argv){
	const char *fname[255];
	int ret;
 	struct stat var; 
	int counter = 1;
	int prog_count = 0;

	struct dirent *entry;
  
	DIR *dp;
	const char *path;
 
	if (argc == 1){
		path = ".";
  		dp = opendir(path);
  		if (dp == NULL){
    			perror("opendir");
    			return -1;
  
		}

  		while((entry = readdir(dp))){
  			puts(entry->d_name);
  			ret = stat(entry->d_name, &var);
			if(ret < 0){
				printf("\nSystem call stat exited with an error code %d", ret);
			
			}

			else if (var.st_nlink >= 2){
				printf("\nDevice id: %ld ", var.st_dev);
				printf(" Inode number: %ld ", var.st_ino);
				printf(" Hard Link : %ld ", var.st_nlink);
				printf(" Mode: %ld ", var.st_mode);
				printf(" UID: %ld ", var.st_uid);
				printf(" GID: %ld ", var.st_gid);
				printf(" Size: %ld ",var.st_size);
				prog_count++;

			}
				else
					printf("\nNo file with more than 2 hardlinks\n");

		}

		closedir(dp);


 		while (++counter <= argc) {
    			printf("\nListing %s...\n", argv[counter-1]);
    			path = argv[counter-1];

		}

	}

	struct stat{
		dev_t     st_dev;     /* ID of device containing file */
		ino_t     st_ino;     /* inode number */
		mode_t    st_mode;    /* protection */
		nlink_t   st_nlink;   /* number of hard links */
		uid_t     st_uid;     /* user ID of owner */
		gid_t     st_gid;     /* group ID of owner */
		off_t     st_size;    /* total size, in bytes */
		blksize_t st_blksize; /* blocksize for filesystem I/O */
		blkcnt_t  st_blocks;  /* number of 512B blocks allocated */

	};
	printf("\n\nTotal programs with more than 2 hardlinks : %d \n", prog_count);

	return 0;

}
